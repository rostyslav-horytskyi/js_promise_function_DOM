{"version":3,"sources":["scripts/main.js"],"names":["waitFor","element","eventName","Promise","resolve","addEventListener","e","message","target","nodeName","id","printMessage","notification","document","createElement","classList","add","textContent","body","append","module","exports"],"mappings":";AAAA,aAEA,SAASA,EAAQC,EAASC,GACjB,OAAA,IAAIC,QAAQ,SAAAC,GACjBH,EAAQI,iBAAiBH,EAAW,SAACI,GAC7BC,IAAAA,EAAU,UAAUL,OAAAA,EACrBI,qBAAAA,GAAAA,OAAAA,EAAEE,OAAOC,SAAiBR,UAAAA,OAAAA,EAAQS,GADvC,KAGAN,EAAQG,OAKd,IAAMI,EAAe,SAACJ,GACdK,IAAAA,EAAeC,SAASC,cAAc,OAE5CF,EAAaG,UAAUC,IAAI,WAC3BJ,EAAaK,YAAcV,EAC3BM,SAASK,KAAKC,OAAOP,IAGvBQ,OAAOC,QAAU,CACfrB,QAAAA,EACAW,aAAAA","file":"main.d8b6b92e.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nfunction waitFor(element, eventName) {\n  return new Promise(resolve => {\n    element.addEventListener(eventName, (e) => {\n      const message = `It was ${eventName} on the element: `\n      + `${e.target.nodeName}, id: ${element.id}.`;\n\n      resolve(message);\n    });\n  });\n}\n\nconst printMessage = (message) => {\n  const notification = document.createElement('div');\n\n  notification.classList.add('message');\n  notification.textContent = message;\n  document.body.append(notification);\n};\n\nmodule.exports = {\n  waitFor,\n  printMessage,\n};\n"]}